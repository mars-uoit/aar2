SCRIPT_VER=8
MAX_CHANNELS=2
' Motor controller configuration. Much of this is particular to Grizzly
' and can be generalized/parameterized as the need arises. Page numbers
' are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/7-nextgen-controllers-user-manual/file
setconfig(_ECHOF, 1) ' Serial echo off (p195)
setconfig(_RWD, 110) ' Watchdog timeout, milliseconds (p195)
setconfig(_AMOD, 1, 1) ' Analog input 1 absolute mode
setconfig(_AMOD, 2, 1) ' Analog input 2 absolute mode

' Undervoltage/overvoltage limits (p214)
setconfig(_OVL, 260)
setconfig(_UVL, 100)

' Encoder, speed config (p208, p221)
' Change EMOD into feedback mode after encoder is mounted
setconfig(_EMOD, 1, 18)
setconfig(_EMOD, 2, 34)
setconfig(_EPPR, 1, 256) '256PPR * 82 = 20992 (82:1 gear ratio)
setconfig(_EPPR, 2, 256) '256PPR * 82 = 20992 (82:1 gear ratio)
'setconfig(_MXRPM, 1, 2300)

' Current limit (p216)
setconfig(_ALIM, 1, 180)
setconfig(_ATGA, 1, 20)
setconfig(_ATGD, 1, 50)
setconfig(_ATRIG, 1, 160)

setconfig(_ALIM, 2, 180)
setconfig(_ATGA, 2, 20)
setconfig(_ATGD, 2, 50)
setconfig(_ATRIG, 2, 160)

' Max acceleration/deceleration (p219)
setconfig(_MAC, 1, 10000)
setconfig(_MDEC, 1, 10000)

setconfig(_MAC, 2, 10000)
setconfig(_MDEC, 2, 10000)

' Closed-loop control (p216-218)
' Change both MMOD into 1 when encoders mounted
setconfig(_MMOD, 1, 1)
setconfig(_KP, 1, 1)
setconfig(_KI, 1, 1)
setconfig(_KD, 1, 0)
setconfig(_ICAP, 1, 100)
setconfig(_CLERD, 1, 0)

setconfig(_MMOD, 2, 1)
setconfig(_KP, 2, 1)
setconfig(_KI, 2, 1)
setconfig(_KD, 2, 0)
setconfig(_ICAP, 2, 100)
setconfig(_CLERD, 2, 0)

top:
		for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
			if getvalue(_BOOL, ch) = 1 then
				GoSub PrintFeedback ' 25 Hz
			end if
		next
		c++
		if c = 5 then
			GoSub PrintStatus ' 5 Hz
			c = 0
		end if
		wait(19)
		goto top

PrintFeedback:
		print("&f:", ch)
		print(":", getvalue(_MOTAMPS, ch))
		print(":", getvalue(_MOTCMD, ch))
		print(":", getvalue(_MOTPWR, ch))
		print(":", getvalue(_ABSPEED, ch))
		print(":", getvalue(_ABCNTR, ch))
		print(":", getvalue(_VOLTS, 2))
		print(":", getvalue(_BATAMPS, ch))
		print(":", getvalue(_ANAIN, ch))
		print(":", getvalue(_TEMP, ch+1))
		print("\r")
		Return
		
PrintStatus:
		print("&s:", SCRIPT_VER)
		print(":", getvalue(_FLTFLAG))
		print(":", getvalue(_STFLAG))
		print(":", getvalue(_VOLTS, 1))
		print(":", getvalue(_VOLTS, 3))
		print(":", getvalue(_TEMP, 1))
		print("\r")
		Return
